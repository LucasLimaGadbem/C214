import { SchemaValidation, SchemaValidationResult } from '../types';
/**
 * Validates an object against a schema
 * @param obj - Object to validate
 * @param schema - Schema to validate against
 * @param path - Current path (used for error messages)
 * @returns Array of validation error messages
 */
export declare const validateObjectAgainstSchema: (obj: Record<string, unknown>, schema: Record<string, unknown>, path?: string) => string[];
/**
 * Validates objects against schemas based on schema validation options
 * @param firstObject - First object to validate
 * @param secondObject - Second object to validate
 * @param schemaValidation - Schema validation options
 * @returns Validation result with any errors
 */
export declare const ValidateObjectsAgainstSchemas: <T extends Record<string, unknown>, U extends Record<string, unknown>>(firstObject: T | null | undefined, secondObject: U | null | undefined, schemaValidation: SchemaValidation) => SchemaValidationResult;
